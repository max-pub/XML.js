export default class XML{static parse(t,r="text/xml"){return(new DOMParser).parseFromString(t,r)}static stringify(t){return(new XMLSerializer).serializeToString(t)}static async fetch(t){return XML.parse(await fetch(t).then(t=>t.text()))}static tag(t,r){let e=XML.parse(`<${t}/>`);for(let t in r)e.firstChild.setAttribute(t,r[t]);return e.firstChild}static transform(t,r,e=!0){let s=new XSLTProcessor;s.importStylesheet("string"==typeof r?XML.parse(r):r);let i=s.transformToDocument("string"==typeof t?XML.parse(t):t);return e?XML.stringify(i):i}}